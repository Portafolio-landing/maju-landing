---
const languages = [
  { code: "es", name: "ESP", flag: "/src/assets/flags/pe.svg" },
  { code: "de", name: "GER", flag: "/src/assets/flags/de.svg" },
  { code: "en", name: "ENG", flag: "/src/assets/flags/gb.svg" },
];

// Convertimos la URL a un objeto de tipo URL para extraer el pathname correctamente
const url = new URL(Astro.request.url);
const currentPath = url.pathname;
const currentLang = currentPath.startsWith("/en")
  ? "en"
  : currentPath.startsWith("/de")
    ? "de"
    : "es";
---

<div class="language-switcher">
  <!-- Botón de idioma -->
  <button
    class="lang-btn"
    id="lang-toggle"
    aria-haspopup="true"
    aria-expanded="false"
  >
    <img
      id="current-flag"
      src={languages.find((lang) => lang.code === currentLang)?.flag}
      alt={currentLang}
      class="flag-icon"
    />
    <span id="current-lang"
      >{languages.find((lang) => lang.code === currentLang)?.name}</span
    >
    <svg
      class="arrow-icon"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M6 9l6 6 6-6"></path>
    </svg>
  </button>

  <!-- Lista desplegable -->
  <ul class="dropdown" id="lang-dropdown">
    {
      languages.map((lang) => (
        <li>
          <a
            href={lang.code === "es" ? "/" : `/${lang.code}/`}
            class="lang-option"
          >
            <img src={lang.flag} alt={lang.name} class="flag-icon" />
            <span>{lang.name}</span>
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const langToggle = document.getElementById("lang-toggle");
    const langDropdown = document.getElementById("lang-dropdown");

    langToggle.addEventListener("click", (event) => {
      event.stopPropagation();

      const isLangOpen = langDropdown.classList.contains("open");

      // Cerrar el menú hamburguesa si se abre el selector de idioma
      if (!isLangOpen) {
        document.dispatchEvent(new Event("close-menu"));
      }

      langDropdown.classList.toggle("open", !isLangOpen);
      langToggle.setAttribute(
        "aria-expanded",
        langDropdown.classList.contains("open")
      );
    });

    document.addEventListener("click", (event) => {
      if (
        !langToggle.contains(event.target) &&
        !langDropdown.contains(event.target)
      ) {
        langDropdown.classList.remove("open");
        langToggle.setAttribute("aria-expanded", "false");
      }
    });

    // Cerrar el dropdown de idiomas si se abre el menú hamburguesa
    document.addEventListener("close-language", () => {
      langDropdown.classList.remove("open");
      langToggle.setAttribute("aria-expanded", "false");
    });

    const url = new URL(window.location.href);
    const firstPathSegment = url.pathname.split("/")[1];

    const currentLang = ["en", "de"].includes(firstPathSegment)
      ? firstPathSegment
      : "es";

    const langData = {
      es: { name: "ESP", flag: "/src/assets/flags/pe.svg" },
      en: { name: "ENG", flag: "/src/assets/flags/gb.svg" },
      de: { name: "GER", flag: "/src/assets/flags/de.svg" },
    };

    //Actualizar elementos con el idioma actual
    document.getElementById("current-flag").src = langData[currentLang].flag;
    document.getElementById("current-lang").innerText =
      langData[currentLang].name;
  });
</script>

<style>
  /* Contenedor del selector */
  .language-switcher {
    position: relative;
    display: inline-block;
  }

  /* Botón de idioma */
  .lang-btn {
    display: flex;
    align-items: center;
    gap: 10px;
    background: white;
    border: none;
    padding: 10px 15px;
    font-size: 24px;
    font-weight: 400;
    font-family: "Montserrat", sans-serif;
    color: #5e3023;
    border-radius: 30px;
    cursor: pointer;
    transition: background 0.3s ease;
  }

  /* Íconos de banderas */
  .flag-icon {
    width: 30px;
    height: auto;
  }

  /* Ícono de flecha */
  .arrow-icon {
    width: 30px;
    height: 30px;
    stroke: #5e3023;
  }

  /* Lista desplegable */
  .dropdown {
    display: none;
    position: absolute;
    background: white;
    border-radius: 20px;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
    list-style: none;
    width: 221px;
    top: 100%;
    left: -50px;
    z-index: 100;
    padding: 0;
    overflow: hidden;
  }

  .dropdown.open {
    display: block;
  }

  /* Opciones de idioma */
  .lang-option {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px;
    justify-content: center;
    text-decoration: none;
    color: #5e3023;
    font-size: 24px;
    font-family: "Montserrat", sans-serif;
    transition: background 0.3s ease;
  }

  .dropdown li:first-child .lang-option {
    border-radius: 20px 20px 0 0;
  }

  /* Última opción: solo borde redondeado abajo */
  .dropdown li:last-child .lang-option {
    border-radius: 0 0 20px 20px;
  }

  /* Opciones intermedias: sin borde redondeado */
  .dropdown li:not(:first-child):not(:last-child) .lang-option {
    border-radius: 0;
  }

  .lang-option:hover {
    background: rgba(137, 87, 55, 0.15);
  }

  @media (max-width: 1000px) {
    .language-switcher {
      margin-right: 30px;
      transform: scale(0.9);
    }
  }

  @media (max-width: 768px) {
    .language-switcher {
      transform: scale(0.8);
    }
  }

  @media (max-width: 480px) {
    .language-switcher {
      transform: scale(0.7);
    }
  }
</style>
